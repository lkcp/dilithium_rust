mod sign {

    use std::fs::read;

    use crate::hints::{power_2_round_q, high_bits, low_bits, make_hints, make_hints_pv};
    use crate::pack::{pack_pk, pack_sk, unpack_pk, unpack_sk, pack_w1, pack_delta};
    use crate::params::{get_params, d, get_params_sign};
    use crate::polyvec::polyvec::PolyVec;
    use crate::sample::{expand_mask, sample_in_ball};
    use sha3::{
        digest::{ExtendableOutput, Update, XofReader},
        Shake256,
    };

    

    fn key_pair(seed: [u8; 32], security_level: u8) -> (Vec<u8>, Vec<u8>) {
        let (k, l, eta) = get_params(security_level);

        // use SHAKE256 to generaterho, rho' and K, whose length are 32, 64 and 32 bytes respectively
        let mut H = Shake256::default();
        H.update(&seed);
        let mut reader = H.finalize_xof();
        let mut rho = [0u8; 32];
        let mut rhoprime = [0u8; 64];
        let mut K = [0u8; 32];
        reader.read(&mut rho);
        reader.read(&mut rhoprime);
        reader.read(&mut K);

        // use SHAKE256 to generate a random polynomial A (k*l polynomials)
        let mut A = Vec::new();
        for i in 0..k {
            A.push(PolyVec::new(l as usize));
        }

        let mut s1 = PolyVec::new(l as usize);
        let mut s2 = PolyVec::new(k as usize);

        // genA
        for i in 0..k as usize {
            for j in 0..l as usize {
                A[i].vec[j] = crate::sample::reject_sample(rho, i as u8, j as u8);
            }
        }

        // gen s1, s2
        for i in 0..(k+l) as usize {
            if i < k as usize {
            s1.vec[i] = crate::sample::error_sample(rhoprime, i as u8, eta as u8);
            } else {
                s2.vec[i-k as usize] = crate::sample::error_sample(rhoprime, i as u8, eta as u8);
            }
        }
        
        // calculate t = NTT^-1(A_hat * NTT(s1))+s2
        let mut s1_hat = s1.copy();
        s1_hat.ntt();
        let mut t = PolyVec::new(l as usize);
        for i in 0..k as usize {
            t.vec[i] = A[i].pointwise_acc(&s1_hat);
        }
        t.intt();
        t = t.add(&s2);
        

        // calculate t1 and t0
        t.caddq();
        let (t1, t0) = power_2_round_q(t, d);

        // pack pk
        let pk = pack_pk(&t1, k as u8, &rho);

        // get tr
        H = Shake256::default();
        H.update(&pk);
        let mut reader = H.finalize_xof();
        let mut tr = [0u8; 32];
        reader.read(&mut tr);

        // pack sk
        let sk = pack_sk(&rho, &K, &tr, &s1, &s2, &t0, eta as i32);

        (pk, sk)
    }

    fn sign(sk: Vec<u8>, m: Vec<u8>) -> Vec<u8> {
        const level: i32 = 2;
        let (k, l, eta, gamma1, gamma2, tau) = get_params_sign(2);

        let (rho, K, tr, mut s1, mut s2, t0) = unpack_sk(sk, eta, k, l);


        // use SHAKE256 to generate a random polynomial A (k*l polynomials)
        let mut A = Vec::new();
        for i in 0..k {
            A.push(PolyVec::new(l as usize));
        }
        for i in 0..k as usize {
            for j in 0..l as usize {
                A[i].vec[j] = crate::sample::reject_sample(rho, i as u8, j as u8);
            }
        }

        let mut mu = [0u8; 64];
        let mut rhoprime = [0u8; 64];

        // mu = H(tr || m)
        let mut H = Shake256::default();
        H.update(&tr);
        H.update(&m);
        let mut reader = H.finalize_xof();
        reader.read(&mut mu);

        // rhoprime = H(K || mu)
        H = Shake256::default();
        H.update(&K);
        H.update(&mu);
        reader = H.finalize_xof();
        reader.read(&mut rhoprime);

        let mut nonce = 0;
        

        let mut delta = vec![];

        let mut pass  = false;

        while !pass {
            let mut z = PolyVec::new(l as usize);
            let mut h = PolyVec::new(k as usize);
            let mut y = PolyVec::new(l as usize);
            for i in 0..l as usize {
                y.set(i, expand_mask(rhoprime, nonce, i as i32, gamma1));
            }
            nonce += l;
            let mut y_hat = y.copy();
            y_hat.ntt();
            let mut w = PolyVec::new(k as usize);
            for i in 0..k as usize {
                w.vec[i] = A[i].pointwise_acc(&y_hat);
            }
            w.intt();
            w.caddq();
            let w1 = w.high_bits(gamma2);
            let w1_ba = pack_w1(&w1, gamma2, k);
            H = Shake256::default();
            H.update(&mu);
            H.update(&w1_ba);
            reader = H.finalize_xof();
            let mut cp = [0u8;32];
            reader.read(&mut cp);
            let mut c = sample_in_ball(cp, tau);
            c.ntt();
            let mut s1_hat = s1.copy();
            let mut s2_hat = s2.copy();
            s1_hat.ntt();
            s2_hat.ntt();
            
            //  Compute z, reject if it reveals secret
            for i in 0..l as usize {
                z.vec[i] = c.point_wise_mul(&s1_hat.vec[i]);
                z.vec[i].intt(); 
                z.vec[i] = z.vec[i].add(&y.vec[i]);
            }
            if z.inf_norm() >= (gamma1 - tau*eta) {continue;}
            
            //Check that subtracting cs2 does not change high bits of w and low bitsdo not reveal secret information
            let w0 = w.low_bits(gamma2);
            let mut pv0 = PolyVec::new(w0.len); // record w - cs2
            for i in 0..k as usize {
                pv0.vec[i] = c.point_wise_mul(&s2_hat.vec[i]);
                pv0.vec[i].intt();
                pv0.vec[i] = w0.vec[i].sub(&pv0.vec[i]);
            }
            // let r0 = pv0.low_bits(gamma2);
            let tt = pv0.inf_norm();
            if tt >= (gamma2-tau*eta) {continue;}

            let mut pv1 = PolyVec::new(k as usize);
            for i in 0..k as usize {
                pv1.vec[i] = c.point_wise_mul(&t0.vec[i]);
                pv1.vec[i].intt();
            }

            h = make_hints_pv(pv1.neg(), pv1.add(&pv0), gamma2);
            if pv1.inf_norm() >= gamma2 {continue;}
            pass = true;
            delta = pack_delta(cp, z, h, level);
        }

        delta
    }

    #[cfg(test)]
    mod test {
        use sha3::{Shake256, digest::{Update, ExtendableOutput, XofReader}};

        use crate::sign;


        #[test]
        fn test_shake256() {
            let seed = [0x7a, 0x24, 0xb6, 0x66, 0xda, 0x34, 0x5c, 0x98, 0xc3, 0xa4, 0x0, 0xaa, 0xfd, 0x14, 0xa5, 0x1a, 0x6c, 0x7, 0xd7, 0x48, 0xc6, 0xfc, 0x4, 0xfb, 0xd1, 0x30, 0x88, 0xed, 0x8b, 0x33, 0x94, 0x8d];

            let out:[u8; 128] = [0xff, 0x7d, 0x49, 0x92, 0x84, 0xbe, 0xf2, 0x59, 0x65, 0x25, 0x63, 0x89, 0xb2, 0xa1, 0x6, 0x1b, 0x30, 0x2, 0x39, 0xe6, 0xd, 0xc2, 0x99, 0x81, 0xf2, 0x7, 0xdf, 0x2, 0xc5, 0xaa, 0xae, 0x3e, 0x57, 0x2, 0x34, 0x8d, 0xe6, 0x1, 0x9a, 0x89, 0x7f, 0x8e, 0x1, 0x50, 0x91, 0x7d, 0x77, 0x3, 0xa9, 0xb9, 0x67, 0x83, 0xf2, 0x36, 0x3c, 0x5d, 0x92, 0xb5, 0x8a, 0x6b, 0x28, 0x63, 0x93, 0xd6, 0xa9, 0xcb, 0x49, 0xcb, 0x3a, 0x6, 0x43, 0xf5, 0x80, 0x4c, 0x92, 0xcd, 0x75, 0x34, 0xcb, 0xd6, 0x9d, 0x55, 0x25, 0x3d, 0x4a, 0x26, 0xad, 0xfa, 0x77, 0xcf, 0x5b, 0x7d, 0x92, 0xae, 0x5b, 0x20, 0x31, 0x23, 0xe3, 0xb1, 0xad, 0x1d, 0x1b, 0x73, 0xc, 0x24, 0x20, 0x4f, 0x6e, 0xb8, 0x93, 0x21, 0xb5, 0x3c, 0xe, 0xb0, 0xa9, 0x72, 0xe6, 0x7f, 0x21, 0x9d, 0x49, 0xf8, 0xdb, 0x67, 0x79, 0x6b];

            let mut H = Shake256::default();
            H.update(&seed);
            let mut reader = H.finalize_xof();
            let mut rho = [0u8; 128];
            reader.read(&mut rho);
            println!("{:?}", rho);
            assert!(rho == out);
        }

        #[test]
        fn test_key_gen() {
            let seed = [0x9f, 0xd9, 0xaa, 0xfd, 0x8f, 0xc9, 0x01, 0xf5, 0x00, 0x85, 0xde, 0x82, 0x68, 0xc2, 0xd6, 0x30, 0x26, 0xdd, 0x8e, 0x35, 0xf8, 0x9d, 0xd1, 0xe2, 0xbc, 0x15, 0x1d, 0x7d, 0x20, 0xd0, 0x97, 0x96];

            let pk_ref = [0x49, 0xe2, 0xf0, 0x22, 0x24, 0xc5, 0x32, 0x5d, 0x8b, 0x57, 0x3f, 0x34, 0x87, 0x8c, 0x73, 0xcf, 0x93, 0x6a, 0xb1, 0x6c, 0x80, 0x4d, 0x4f, 0x9a, 0xf5, 0xc6, 0xe4, 0xc1, 0xb4, 0x8d, 0xdb, 0x38, 0xf1, 
            0x09, 0x30, 0x06, 0x4d, 0x31, 0xce, 0x07, 0x54, 0xd6, 0xd0, 0x1e, 0xb5, 0x81, 0xe1, 0x09, 0xcd, 0xb9, 0x9d, 0xb3, 0x0a, 0xff, 0x73, 0x48, 0x5b, 0x1a, 0x55, 0xd3, 0x84, 0xaf, 0x5a, 0xdb, 0x14, 0x52, 0x32, 0x1d, 0xbc, 0x07, 
            0xae, 0x1a, 0xfe, 0x8d, 0x7a, 0x56, 0x31, 0x5d, 0xce, 0x7d, 0xa5, 0x0c, 0x5c, 0x38, 0x6c, 0x8e, 0x16, 0x4f, 0xb2, 0x26, 0xec, 0x48, 0x82, 0xe7, 0xcf, 0x4d, 0x8b, 0x1e, 0xfa, 0x64, 0xc0, 0xc3, 0xb5, 0x5e, 0xcd, 0x0b, 0x18, 0x1d, 0x85, 0x7b, 0x66, 0x3d, 0x39, 0xa7, 0xbc, 0xb8, 0x1d, 0xa8, 0xab, 0xed, 0xd1, 0x50, 0x2d, 0xc1, 0xbd, 0x02, 0x0c, 0xa7, 0xae, 0xf2, 0x81, 0x35, 0x65, 0xd6, 0x2a, 0x3a, 0xf1, 0x32, 0xc9, 0x7b, 0xdc, 0x2f, 0xf4, 0xf0, 0x78, 0xd8, 0x92, 0x15, 0xd4, 0xaa, 0x43, 0x50, 0x45, 0xd4, 0x12, 0x40, 0x4e, 0x3b, 0x8a, 0x52, 0x51, 0xa9, 0x12, 0x36, 0xbc, 0x26, 0xe0, 0xcf, 0x70, 0x75, 0x18, 0xcd, 0x0e, 0xfb, 0x1a, 0x95, 0x0e, 0xc3, 0x05, 0x88, 0x87, 0x1f, 0x95, 0x28, 0x1c, 0xf0, 0xc5, 0xcd, 0x35, 0x45, 0x01, 0x5b, 0x37, 0x93, 0x7d, 0xc2, 0xfc, 0x4a, 0x21, 0x84, 0xdd, 0x6c, 0xb8, 0x8f, 0x19, 0x4d, 0x9a, 0x4c, 0x41, 0x93, 0x94, 0x98, 0x83, 0xb4, 0xc3, 0x06, 0x0a, 0x2a, 0xb7, 0xcd, 0x35, 0x94, 0x17, 0xd9, 0x9a, 0x02, 0xc4, 0x0f, 0xe8, 0xfc, 0xc1, 0x16, 0x45, 0x24, 0x13, 0x0e, 0xb2, 0xc4, 0xca, 0xb1, 0xde, 0x02, 0xd4, 0x5c, 0xa2, 0xa9, 0xd9, 0xc6, 0xfa, 0x8c, 0xe5, 0x54, 0xc5, 0xf8, 0x7f, 0xae, 0xfe, 0x7b, 0xfd, 0x37, 0xeb, 0x49, 0xb1, 0x1e, 0xfc, 0x49, 0xcb, 0x63, 0x65, 0xe6, 0xd0, 0xfb, 0x88, 0xd5, 0xe1, 0x05, 0x18, 0xdc, 0x56, 0xb0, 0xbc, 0x68, 0x30, 0xee, 0x57, 0x21, 0x88, 0x16, 0xdc, 0x0d, 0x9d, 0xd9, 0x33, 0x61, 0x2a, 0x5c, 0xb8, 0x73, 0xc7, 0xaa, 0x27, 0x59, 0x3e, 0x85, 0x7e, 0xd2, 0x24, 0x6e, 0x59, 0xf5, 0x71, 0xfa, 0xa2, 0xd7, 0x91, 0xbd, 0x4c, 0x4f, 0xa7, 0xc2, 0xbf, 0x9f, 0x71, 0x5d, 0xba, 0xa3, 0x57, 0xb7, 0x7f, 0x7c, 0xee, 0x01, 0x7a, 0x7d, 0x1e, 0xbd, 0x2d, 0xe6, 0x8c, 0xe5, 0x22, 0x0a, 0xda, 0x04, 0x94, 0xc3, 0x7e, 0x46, 0x34, 0xfa, 0xae, 0x0d, 0x30, 0xbc, 0x95, 0xd9, 0x68, 0x02, 0xf9, 0x29, 0xfa, 0x4a, 0xb3, 0x6c, 0x43, 0xaf, 0x8e, 0xc2, 0xd8, 0x5f, 0x56, 0xf6, 0x62, 0x61, 0x9f, 0x95, 0xe6, 0xa6, 0xa5, 0x28, 0x92, 0xce, 0x07, 0xab, 0x16, 0x69, 0xdc, 0x7b, 0x08, 0xb7, 0x7e, 0x0d, 0x83, 0xd5, 0xdc, 0x99, 0x82, 0x42, 0x19, 0xdc, 0x97, 0xdc, 0xc3, 0xf3, 0x3d, 0xf3, 0xc4, 0x1e, 0xfd, 0x50, 0xba, 0xc4, 0xa2, 0x40, 0x58, 0xb0, 0x92, 0xb6, 0xc4, 0x5a, 0x23, 0xc0, 0x59, 0xb3, 0xa4, 0x68, 0x29, 0xb4, 0xee, 0xfd, 0x5f, 0xba, 0xaa, 0xb1, 0xfe, 0xad, 0xd8, 0x1f, 0xdb, 0xfa, 0xc7, 0x8f, 0xd8, 0x73, 0x98, 0xb0, 0xc7, 0xee, 0x9d, 0xbc, 0xc0, 0x47, 0x9c, 0x84, 0x82, 0xb4, 0x79, 0x2e, 0xc1, 0x85, 0x3a, 0xd4, 0x47, 0x79, 0xcd, 0x0a, 0xb5, 0x8f, 0x95, 0xe8, 0x78, 0x30, 0x8b, 0xde, 0xc1, 0x85, 0x82, 0xd9, 0x07, 0x79, 0xfe, 0x51, 0x56, 0xa7, 0xe4, 0x45, 0x91, 0x23, 0x8a, 0x69, 0xbe, 0x20, 0xed, 0xe1, 0x93, 0xc9, 0xdd, 0x14, 0x88, 0xb3, 0x5e, 0x1c, 0xaf, 0xb9, 0x67, 0x92, 0xcf, 0xe7, 0x76, 0x47, 0xc4, 0x15, 0x98, 0xdf, 0x87, 0x3a, 0x21, 0x37, 0xc9, 0x3f, 0xb3, 0x1a, 0xb3, 0x70, 0x26, 0x01, 0xe6, 0x6a, 0xc9, 0x7b, 0x84, 0x4a, 0x7e, 0xeb, 0x5a, 0x8e, 0x20, 0x14, 0xbe, 0xcc, 0xf1, 0xe1, 0x5b, 0xb6, 0xbd, 0xef, 0xd1, 0x5d, 0xd1, 0xbd, 0x5e, 0xe0, 0x06, 0x8b, 0x4b, 0x0b, 0xdb, 0x55, 0x43, 0xcc, 0x75, 0xf1, 0x5d, 0xbc, 0xf1, 0x77, 0xc1, 0x6d, 0x9d, 0xb7, 0x33, 0x43, 0x08, 0xd4, 0x93, 0xcd, 0x37, 0xca, 0xe9, 0x44, 0x8f, 0xa4, 0x5b, 0xfb, 0xaa, 0x8b, 0xfc, 0x87, 0x69, 0x16, 0xf7, 0xbc, 0x9c, 0x73, 0xc5, 0xbf, 0xc3, 0x1e, 0xe5, 0x61, 0xcb, 0xe5, 0x91, 0xd7, 0x19, 0x38, 0x44, 0x82, 0x3f, 0x62, 0x3d, 0xc6, 0x87, 0x82, 0xda, 0x3f, 0xaf, 0x3b, 0x66, 0xae, 0xea, 0xfa, 0x0b, 0x70, 0x38, 0x7c, 0x12, 0xcf, 0x14, 0xf1, 0x00, 0xd5, 0x45, 0x4d, 0xb8, 0xe6, 0x1c, 0xe5, 0x84, 0xe5, 0x64, 0x21, 0x3d, 0x8b, 0x67, 0x1a, 0x38, 0xbf, 0xfa, 0xc2, 0x8a, 0x6c, 0x9b, 0x8e, 0xd2, 0xfd, 0x8b, 0x93, 0x68, 0x93, 0xe3, 0xfe, 0xaa, 0x73, 0xc9, 0x9b, 0x93, 0x9c, 0x18, 0xf8, 0xc1, 0xff, 0x93, 0x20, 0x09, 0x06, 0x3a, 0xe9, 0x97, 0x23, 0x76, 0xb1, 0x94, 0x90, 0xcd, 0x5f, 0x2d, 0x86, 0x40, 0x03, 0x5d, 0xcb, 0x1f, 0x86, 0x23, 0x34, 0x98, 0x55, 0x7c, 0x28, 0xa1, 0x78, 0xcb, 0xd1, 0x4b, 0xca, 0x72, 0x5c, 0x5d, 0x61, 0x18, 0x3c, 0xab, 0x39, 0x94, 0x97, 0xb1, 0x09, 0xf7, 0xff, 0xb2, 0x12, 0xf5, 0x7e, 0x44, 0xb8, 0xfe, 0xb3, 0xd0, 0xe0, 0x8c, 0xe6, 0xe2, 0xcc, 0x45, 0x6a, 0x29, 0x1c, 0xc2, 0x4a, 0x04, 0x2e, 0xc4, 0xc4, 0xee, 0x08, 0x88, 0x4d, 0x33, 0x70, 0xed, 0x14, 0x5f, 0xfa, 0xaf, 0x9b, 0xc8, 0x8f, 0x56, 0xf1, 0x97, 0x50, 0xae, 0x0a, 0x5a, 0xa7, 0xab, 0xf8, 0xa8, 0x14, 0xef, 0x57, 0x2c, 0x54, 0x98, 0x79, 0xad, 0x29, 0x70, 0xb3, 0xad, 0x92, 0x8c, 0xd8, 0x80, 0xcb, 0xe8, 0xe2, 0x73, 0x5e, 0x50, 0x47, 0x5f, 0xed, 0x95, 0x69, 0xd4, 0xb8, 0x3b, 0xa7, 0x8c, 0xed, 0xb2, 0x60, 0x27, 0x61, 0x78, 0x2b, 0x8a, 0xf0, 0x18, 0x10, 0xe8, 0x99, 0x7c, 0x03, 0x47, 0x30, 0x63, 0xfd, 0x09, 0x20, 0xc7, 0x33, 0xa5, 0x6c, 0xe6, 0xeb, 0x3e, 0xdd, 0xf2, 0xd7, 0x04, 0x81, 0xbd, 0x4e, 0x3b, 0x63, 0xa8, 0x83, 0x27, 0x33, 0xc6, 0x6d, 0xa1, 0xdd, 0x76, 0x3c, 0x8c, 0x06, 0x26, 0xde, 0xdb, 0xa5, 0x61, 0x12, 0x68, 0xb7, 0xe9, 0x93, 0x86, 0xb0, 0x40, 0x2d, 0xfc, 0xb6, 0xda, 0xe6, 0x0f, 0x42, 0x17, 0xee, 0xda, 0xd8, 0xee, 0x8e, 0x6d, 0x67, 0x68, 0x5a, 0x4c, 0x77, 0x18, 0x68, 0x3b, 0x6b, 0x16, 0x09, 0x8d, 0x07, 0x60, 0x5f, 0x5c, 0x67, 0xd5, 0xc5, 0x28, 0xe4, 0x07, 0x36, 0xfb, 0xd5, 0xdc, 0x6f, 0x55, 0x84, 0x8e, 0x4c, 0x15, 0x99, 0x04, 0x1d, 0xb1, 0xf3, 0xf2, 0xac, 0x7c, 0x98, 0x91, 0x62, 0x52, 0xb7, 0xfd, 0xd4, 0x93, 0x65, 0xf7, 0xab, 0x16, 0x3a, 0xe6, 0xea, 0x40, 0xe7, 0xda, 0xc2, 0x64, 0xf0, 0x2e, 0x9e, 0xa3, 0x91, 0xd5, 0xf9, 0xfd, 0xef, 0x50, 0xab, 0x33, 0x94, 0x3d, 0x5f, 0x64, 0x79, 0x20, 0x09, 0x31, 0xf5, 0x72, 0xf8, 0xb7, 0x75, 0x04, 0x79, 0x54, 0x0e, 0x3a, 0xa4, 0xa2, 0x52, 0x4e, 0x27, 0x12, 0xa4, 0xe1, 0x56, 0x1e, 0xc3, 0x1e, 0xd0, 0xfd, 0xe0, 0xbc, 0xb1, 0xd8, 0x74, 0x70, 0x59, 0x8c, 0x99, 0xb3, 0x74, 0x00, 0x42, 0x35, 0xe4, 0x01, 0x3a, 0xb5, 0xf4, 0x94, 0x6f, 0x39, 0x57, 0x11, 0x70, 0x18, 0x4c, 0xb2, 0x9e, 0x95, 0xc7, 0xaf, 0x78, 0x8c, 0x9f, 0x64, 0x41, 0x23, 0x0e, 0x3b, 0xc4, 0x56, 0xde, 0x89, 0xa4, 0x79, 0xf6, 0x98, 0x7b, 0xb1, 0x07, 0x25, 0xf9, 0xaf, 0x38, 0x66, 0xab, 0x25, 0xfe, 0x4e, 0x06, 0x34, 0x21, 0xa6, 0x29, 0x2d, 0x24, 0x23, 0x59, 0x76, 0x41, 0x69, 0xf9, 0x57, 0x18, 0x8d, 0xa1, 0xca, 0xc4, 0xe7, 0x83, 0x39, 0xbf, 0xc4, 0x18, 0x0d, 0x98, 0xe1, 0x41, 0x90, 0xf8, 0x1d, 0x02, 0x7c, 0x4e, 0xa8, 0xf9, 0x96, 0x5a, 0xa4, 0x9a, 0xc2, 0x54, 0xdb, 0x96, 0xdd, 0x02, 0x2a, 0x52, 0xae, 0x87, 0xbe, 0xb9, 0x66, 0x96, 0x23, 0xaf, 0xd9, 0x6b, 0x76, 0x04, 0x0f, 0xf8, 0x48, 0x35, 0x80, 0xa0, 0xae, 0xa7, 0x15, 0xbe, 0x9c, 0x98, 0x76, 0xcc, 0xd3, 0x88, 0x7d, 0x00, 0x04, 0x3c, 0x05, 0xa7, 0xd2, 0x19, 0x6d, 0x7e, 0xb5, 0x45, 0x9f, 0xfd, 0x04, 0xa1, 0x78, 0x90, 0x9c, 0x57, 0x97, 0x69, 0x91, 0x44, 0x64, 0xd3, 0xac, 0x53, 0x52, 0xc7, 0xe2, 0xd9, 0xf4, 0x12, 0xeb, 0xfa, 0x29, 0xaf, 0x74, 0xf6, 0xf7, 0x32, 0xd3, 0x57, 0x1a, 0xd1, 0x59, 0x1a, 0xc6, 0xbe, 0x43, 0x45, 0x35, 0xf2, 0x7d, 0x61, 0x2f, 0xa9, 0x3c, 0x7e, 0x3f, 0x31, 0x6d, 0xc1, 0x10, 0x20, 0x03, 0x07, 0x92, 0x62, 0xba, 0x5c, 0x7a, 0xaa, 0x8d, 0x41, 0x1d, 0x52, 0x44, 0x2c, 0x3f, 0x30, 0x3d, 0xb5, 0xd8, 0x1d, 0x55, 0x06, 0x60, 0x08, 0xfd, 0x10, 0x82, 0x88, 0x41, 0x41, 0x3c, 0xba, 0xc0, 0xa0, 0x10, 0xac, 0x40, 0xfa, 0xfc, 0x0c, 0xd0, 0x28, 0x25, 0xc2, 0x0b, 0x35, 0x05, 0xf4, 0x89, 0x6f, 0xb2, 0x71, 0x88, 0x23, 0x77, 0x35, 0xe8, 0xd1, 0xa1, 0x24, 0xb2, 0xe9, 0x3e, 0x42, 0xc8, 0x96, 0xb3, 0x7c, 0x93, 0x6a, 0xd8, 0x44, 0x2a, 0x9f, 0x5f, 0x1c, 0x73, 0x37, 0x84, 0xa9, 0xad, 0x57, 0xfb, 0xe7, 0x85, 0x89, 0xda, 0xd3, 0xd1, 0x8e, 0xb5, 0xde, 0xad, 0xc7, 0xb4, 0xa3, 0xf8, 0xc8, 0xf7, 0x5a, 0x19, 0x5a, 0x7c, 0xa2, 0x7b, 0xae, 0x77,
             0x91, 0x11, 0x21, 0x0a, 0x14, 0x99, 0xdf, 0xbb, 0x1d, 0x81, 0xa5, 0x7d, 0x8a, 0x9d, 0xf4, 0x83, 0xd8, 0x19, 0xaa, 0x0c, 0x55];

            let sk_ref: [u8; 2528] = [0x49, 0xe2, 0xf0, 0x22, 0x24, 0xc5, 0x32, 0x5d, 0x8b, 0x57, 0x3f, 0x34, 0x87, 0x8c, 0x73, 0xcf, 0x93, 0x6a, 0xb1, 0x6c, 0x80, 0x4d, 0x4f, 0x9a, 0xf5, 0xc6, 0xe4, 0xc1, 0xb4, 0x8d, 0xdb, 0x38, 0x87, 
            0x58, 0x8e, 0x98, 0x8c, 0x4a, 0x42, 0x3b, 0x8b, 0xe4, 0x30, 0x5c, 0xc4, 0xf4, 0xb7, 0xf7, 0x4d, 0x37, 0x34, 0xec, 0xed, 0x4b, 0xec, 0x55, 0xfc, 0xf8, 0x6c, 0x3a, 0x5f, 0x36, 0x04, 0x9c, 0x06, 0x47, 0xad, 0x21, 0xfc, 0xe1, 0x02, 0xbd, 0xa9, 0xbd, 0xec, 0xee, 0x07, 0xe7, 0x2a, 0xd4, 0x54, 0xa5, 0x57, 0x9a, 0xba, 0xcc, 0x79, 0x20, 0x1b, 0xdd, 0xe4, 0xb5, 0xba, 0x1b, 0x35, 0xf5, 0xd1, 0xb6, 0x68, 0x09, 0x35, 0x4c, 0xc8, 0x00, 0x8a, 0xc2, 0x94, 0x84, 0x9a, 0x12, 0x8c, 0x04, 0xb1, 0x91, 0xa2, 0x98, 0x21, 0x24, 0x09, 0x4a, 0x11, 0x11, 0x91, 0xd4, 0x44, 0x40, 0xa4, 0x46, 0x24, 0x91, 0xc6, 0x0c, 0xcb, 0xb6, 0x24, 0x90, 0x20, 0x8c, 0x24, 0x08, 0x6d, 0x01, 0x20, 0x00, 0xe4, 0xb6, 0x45, 0x50, 0x84, 0x51, 0x8a, 0x38, 0x02, 0x60, 0xc2, 0x71, 0x94, 0xc8, 0x41, 0x4c, 0x24, 0x00, 0x41, 0x48, 0x8e, 0x4c, 0xa0, 0x2d, 0x5a, 0xa8, 0x20, 0x50, 0xb6, 0x10, 0x20, 0xb9, 0x01, 0xcc, 0x80, 0x05, 0x94, 0x98, 0x68, 0x41, 0x06, 0x25, 0x04, 0x89, 0x01, 0x0b, 0xb7, 0x91, 0xe0, 0xc8, 0x28, 0x1b, 0xa4, 0x41, 0x60, 0x22, 0x20, 0xe0, 0x44, 0x6d, 0x13, 0x38, 0x61, 0x92, 0x48, 0x25, 0x43, 0xc2, 0x00, 0xcb, 0x88, 0x70, 0x82, 0x98, 0x90, 0x88, 0x22, 0x50, 0xc1, 0xa8, 0x81, 0x1b, 0x28, 0x88, 0xcc, 0xc6, 0x70, 0x12, 0xa0, 0x4d, 0x43, 0x12, 0x04, 0x21, 0x40, 0x30, 0x4a, 0x42, 0x49, 0x08, 0xa6, 0x21, 0x51, 0x48, 0x71, 0x60, 0xa4, 0x8c, 0xdb, 0x44, 0x32, 0x98, 0xa8, 0x30, 0x58, 0x18, 0x8c, 0x1a, 0x03, 0x91, 0x9b, 0x26, 0x0c, 0x50, 0x12, 0x30, 0x1b, 0xb7, 0x2c, 0x99, 0xa8, 0x84, 0x19, 0x93, 0x4c, 0x14, 0xb3, 0x30, 0x4b, 0x92, 0x10, 0x42, 0x40, 0x21, 0x8c, 0xa4, 0x80, 0x19, 0x03, 0x60, 0x60, 0x34, 0x90, 0x23, 0x13, 0x64, 0x91, 0xc0, 0x64, 0x0a, 0xa2, 0x80, 0x8a, 0xa0, 0x4d, 0x58, 0x28, 0x30, 0xca, 0x06, 0x82, 0x21, 0x93, 0x8d, 0x00, 0xb0, 0x50, 0x13, 0x26, 0x32, 0x11, 0xa8, 0x29, 0xc4, 0x98, 0x80, 0x4b, 0x26, 0x80, 0xa1, 0xb4, 0x2d, 0x9a, 0x40, 0x89, 0x13, 0x42, 0x11, 0x02, 0x49, 0x64, 0xa4, 0x08, 0x25, 0x9a, 0xc4, 0x10, 0x01, 0x35, 0x52, 0x00, 0x28, 0x4c, 0x24, 0xa6, 0x6c, 0xa1, 0x82, 0x90, 0x8a, 0x08, 0x09, 0x00, 0xc6, 0x10, 0xa1, 0xc8, 0x4c, 0x03, 0x09, 0x69, 0xe2, 0x38, 0x00, 0x63, 0x10, 0x4a, 0x01, 0x85, 0x71, 0x22, 0x24, 0x31, 0x03, 0x97, 0x41, 0xd4, 0x48, 0x30, 0x18, 0x49, 0x91, 0x00, 0x85, 0x04, 0x1b, 0x22, 0x64, 0xd2, 0xa8, 0x01, 0x01, 0xb2, 0x65, 0xc3, 0x00, 0x70, 0x48, 0x22, 0x61, 0x5a, 0x10, 0x6c, 0x9a, 0x14, 0x25, 0x5b, 0x18, 0x6a, 0x5b, 0x44, 0x04, 0x98, 0x28, 0x2e, 0x08, 0xc2, 0x31, 0x80, 0x40, 0x4e, 0x4a, 0x02, 0x32, 0x43, 0x40, 0x91, 0x92, 0x08, 0x89, 0xc1, 0xa0, 0x65, 0x1a, 0xb0, 0x25, 0xe4, 0x02, 0x2c, 0x83, 0x32, 0x81, 0x02, 0x48, 0x05, 0x24, 0x98, 0x41, 0x94, 0x22, 0x00, 0x81, 0x48, 0x32, 0x5b, 0x40, 0x71, 0xd9, 0x06, 0x49, 0xd3, 0x20, 0x02, 0xa3, 0x34, 0x10, 0x83, 0xb6, 0x01, 0x22, 0x38, 0x29, 0xdc, 0x14, 0x89, 0xe4, 0xc8, 0x70, 0x4a, 0x16, 0x6a, 0x10, 0x20, 0x68, 0x08, 0x25, 0x4c, 0x9a, 0x44, 0x26, 0x1b, 0xa8, 0x28, 0xcb, 0x24, 0x2a, 0x1c, 0x41, 0x21, 0x54, 0x34, 0x88, 0x5c, 0x20, 0x0c, 0x09, 0x35, 0x05, 0x59, 0x30, 0x46, 0x1c, 0x27, 0x12, 0x51, 0x38, 0x72, 0x92, 0xc0, 0x30, 0x08, 0x47, 0x80, 0xe0, 0x06, 0x50, 0x13, 0x18, 0x70, 0x48, 0x34, 0x31, 0x14, 0x20, 0x81, 0x23, 0x07, 0x24, 0xca, 0x20, 0x0a, 0xd1, 0x90, 0x21, 0xda, 0x22, 0x71, 0x58, 0x12, 0x41, 0x18, 0x41, 0x91, 0x20, 0x47, 0x90, 0x21, 0x11, 0x31, 0x98, 0x94, 0x81, 0xda, 0x12, 0x61, 0x22, 0xc3, 0x41, 0xa4, 0x10, 0x2a, 0x52, 0xa8, 0x30, 0xc3, 0x02, 0x4d, 0x10, 0x26, 0x81, 0x80, 0x18, 0x20, 0xa4, 0x10, 0x8a, 0x64, 0xb0, 0x4d, 0x5b, 0x22, 0x0a, 0x0b, 0xc6, 0x09, 0x4c, 0x86, 0x91, 0x5c, 0x98, 0x2c, 0xd9, 0x02, 0x65, 0x04, 0x34, 0x28, 0x1a, 0x15, 0x49, 0x24, 0x94, 0x00, 0x10, 0x03, 0x81, 0xe2, 0x18, 0x64, 0x62, 0x14, 0x49, 0x92, 0xc0, 0x2c, 0x5a, 0x96, 0x64, 0x92, 0xb2, 0x60, 0x9b, 0x36, 0x64, 0x20, 0x19, 0x62, 0x11, 0x34, 0x89, 0x0c, 0x97, 0x69, 0x20, 0x84, 0x44, 0x8a, 0xb8, 0x91, 0x14, 0xa8, 0x2d, 0xa4, 0x30, 0x71, 0x64, 0x40, 0x69, 0x24, 0x90, 0x49, 0xc4, 0x42, 0x0c, 0x60, 0x16, 0x30, 0xd3, 0x00, 0x42, 0xca, 0x14, 0x92, 0x24, 0xa6, 0x84, 0x1b, 0x38, 0x20, 0x04, 0x14, 0x40, 0x0b, 0x13, 0x52, 0x89, 0x26, 0x26, 0x42, 0x12, 0x0c, 0xd1, 0x10, 0x92, 0xc1, 0xa8, 0x2c, 0x13, 0x04, 0x2e, 0x11, 0x33, 0x6e, 0x82, 0x84, 0x31, 0x1a, 0x38, 0x68, 0xca, 0xa6, 0x30, 0x52, 0x24, 0x45, 0xd2, 0x02, 0x82, 0x14, 0x98, 0x8c, 0xd9, 0xa4, 0x8d, 0x83, 0x46, 0x4a, 0x20, 0x21, 0x4d, 0x02, 0x90, 0x41, 0xca, 0xb2, 0x24, 0x11, 0x28, 0x41, 0x8b, 0x46, 0x21, 0xa3, 0x14, 0x6e, 0x13, 0xb5, 0x10, 0xc1, 0x38, 0x71, 0x8a, 0x28, 0x8e, 0x60, 0x90, 0x45, 0x42, 0x80, 0x6d, 0xa3, 0x38, 0x10, 0x0c, 0x21, 0x04, 0x63, 0x96, 0x90, 0x0c, 0xa6, 0x90, 0x03, 0x25, 0x2c, 0x82, 0x32, 0x68, 0x40, 0xa4, 0x44, 0xd9, 0xb4, 0x40, 0x20, 0x08, 0x51, 0xc0, 0xb4, 0x20, 0x49, 0xa8, 0x2d, 0x91, 0xb8, 0x8c, 0xd4, 0x24, 0x80, 0x42, 0x84, 0x08, 0x1b, 0x37, 0x12, 0x09, 0x00, 0x69, 0x1a, 0x88, 0x11, 0x4a, 0x32, 0x10, 0x10, 0x11, 0x72, 0x18, 0x40, 0x61, 0x42, 0xb8, 0x91, 0x24, 0xa5, 0x00, 0xc1, 0x42, 0x66, 0x89, 0x22, 0x24, 0x48, 0x96, 0x28, 0x23, 0xa5, 0x85, 0xa2, 0x04, 0x40, 0x09, 0x31, 0x30, 0x90, 0x20, 0x91, 0xe3, 0x48, 0x08, 0x40, 0x90, 0x83, 0xc0, 0xee, 0x46, 0xed, 0xa2, 0x78, 0x55, 0x4c, 0xc9, 0x54, 0x13, 0xa2, 0x00, 0x32, 0xcc, 0x5e, 0xdd, 0x2d, 0xbd, 0x4e, 0x30, 0xcb, 0x7e, 0x5d, 0xd7, 0xb4, 0x8b, 0xb8, 0x28, 0x10, 0x62, 0xe2, 0x9f, 0xf9, 0xd0, 0xe2, 0x8b, 0x4b, 0x33, 0xd2, 0x77, 0xf1, 0x6f, 0x7c, 0x24, 0x8b, 0x53, 0x81, 0x98, 0x13, 0x67, 0x35, 0x7d, 0x87, 0x21, 0xff, 0xad, 0xd7, 0x3e, 0x23, 0x39, 0x61, 0x4f, 0xa2, 0x2a, 0x2e, 0xd3, 0x89, 0xb1, 0xbd, 0xdc, 0x57, 0xc8, 0x5a, 0x51, 0xc0, 0x29, 0xf6, 0x29, 0x27, 0xf0, 0xc4, 0x0d, 0x35, 0x17, 0x33, 0xb5, 0x97, 0x70, 0x58, 0x85, 0x71, 0x73, 0x4e, 0x11, 0x8d, 0xa5, 0x2c, 0x94, 0xd1, 0x96, 0x5e, 0x00, 0xbd, 0xc9, 0x91, 0x1f, 0x1d, 0x4f, 0x15, 0xb7, 0x3f, 0xe2, 0xb9, 0x6c, 0x5b, 0xfd, 0xc9, 0x7c, 0xbe, 0xf2, 0x95, 0x15, 0x3a, 0x4b, 0x94, 0x14, 0x3a, 0x17, 0x2f, 0x21, 0x54, 0xd9, 0x69, 0x6f, 0xee, 0x25, 0x01, 0x70, 0xdb, 0x66, 0xcf, 0x69, 0x5f, 0x25, 0xa9, 0x92, 0xf7, 0x14, 0x9a, 0xee, 0x80, 0x3b, 0x12, 0xf6, 0x98, 0x49, 0x86, 0x5f, 0x94, 0x02, 0xd9, 0xf8, 0x5a, 0x50, 0x49, 0x19, 0x57, 0xb6, 0x92, 0x64, 0x2f, 0x23, 0x16, 0x5b, 0xf1, 0x09, 0xe7, 0x10, 0x0d, 0x2c, 0x21, 0x97, 0x7c, 0xbf, 0x61, 0x5e, 0x63, 0xc5, 0x82, 0x90, 0xa2, 0x91, 0xb6, 0x39, 0xe1, 0xcf, 0x55, 0xd9, 0xb2, 0x43, 0xa2, 0xbd, 0xb0, 0x4a, 0x4b, 0x4b, 0x26, 0x3e, 0xef, 0xbe, 0x7b, 0x12, 0x8d, 0xbe, 0x95, 0x02, 0xa8, 0xc1, 0xa7, 0x18, 0x10, 0x6f, 0x4a, 0xb1, 0x24, 0x28, 0x9f, 0x20, 0x10, 0x16, 0xf7, 0x5e, 0x85, 0x62, 0x38, 0x64, 0x55, 0x20, 0x2d, 0x09, 0x88, 0x17, 0x65, 0x53, 0xf5, 0x01, 0x1f, 0x6d, 0xbc, 0xf4, 0x8a, 0xb7, 0xa7, 0x25, 0x91, 0xf0, 0x05, 0xeb, 0xa4, 0x94, 0x66, 0x0b, 0x9e, 0xd0, 0xd6, 0x33, 0x07, 0x8a, 0x05, 0xa7, 0x95, 0xc4, 0x7b, 0x54, 0x2c, 0x46, 0x47, 0x7c, 0x46, 0x4c, 0x14, 0xe0, 0xef, 0x1e, 0x74, 0xf9, 0x1a, 0x76, 0xa6, 0x9c, 0x7e, 0x8a, 0xc9, 0xd3, 0x29, 0xdc, 0x21, 0xa6, 0xd0, 0x78, 0xc3, 0x54, 0x3a, 0x71, 0xe9, 0x56, 0xa3, 0xe9, 0xe2, 0x77, 0xaa, 0x64, 0x1c, 0x0d, 0x79, 0xb6, 0x07, 0xa1, 0x06, 0x99, 0x6c, 0x66, 0x34, 0xe5, 0x3e, 0x44, 0x6b, 0xae, 0x9e, 0x17, 0xbf, 0x4c, 0x27, 0x95, 0x5a, 0xc8, 0x86, 0x9c, 0x38, 0xb4, 0x35, 0xbe, 0x75, 0xec, 0xa0, 0xf1, 0xfb, 0xd3, 0x10, 0x65, 0xbb, 0xb1, 0xdf, 0x3a, 0xb2, 0xfd, 0xc6, 0x33, 0x5a, 0x73, 0x02, 0x5e, 0x9e, 0xd3, 0x9c, 0x36, 0x1a, 0x09, 0x89, 0x07, 0xd8, 0x79, 0x7c, 0x6e, 0x80, 0xe2, 0xb8, 0x21, 0x5a, 0x2d, 0x73, 0x08, 0xc7, 0xd3, 0x46, 0x9a, 0x70, 0x77, 0x18, 0x37, 0x1e, 0x6e, 0x9a, 0x9c, 0x43, 0x96, 0x64, 0xb7, 0xb9, 0x10, 0x78, 0x1d, 0xd6, 0x3e, 0x48, 0xcf, 0xc2, 0x5e, 0x0b, 0xf5, 0x41, 0xf4, 0xb7, 0x6b, 0xc6, 0x8d, 0x16, 0x45, 0x43, 0x1d, 0x10, 0xf4, 0xf6, 0xd3, 0x5c, 0x81, 0xaf, 0xfe, 0x3d, 0x11, 0x57, 0xa8, 0x4e, 0x15, 0x06, 0xcb, 0x12, 0x36, 0x8f, 0xd7, 0xe6, 0x06, 0x61, 0x64, 0x25, 0x62, 0xe7, 0xc6, 0xbd, 0x05, 0xe5, 0x4f, 0x3a, 0x08, 0x54, 0xa2, 0x43, 0x56, 0x90, 0xfb, 0x7d, 0xd2, 0x68, 0x77, 0x65, 0xbc, 0xbd, 0xf9, 0xb0, 0x83, 0x14, 0xa8, 0xef, 0x5b, 0xf3, 0xae, 0xaf, 0x47, 0x96, 0xf5, 0xf8, 0x40, 0x40, 0xf7, 0x31, 0x37, 0xc0, 0xe7, 0x97, 0x9b, 0x8f, 0x71, 0xf5, 0xec, 0xd0, 0xe4, 0xef, 0x9b, 0x68, 0xcc, 0x8f, 0x6c, 0x9d, 0x88, 0x75, 0xc2, 0xda, 0x0c, 0x38, 0xf1, 0x35, 0x73, 0xa8, 0x0a, 0x31, 0x99, 0x99, 0x3f, 0x98, 0x44, 0x8f, 0x8b, 0x22, 0xde, 0x5b, 0xc0, 0x9e, 0xb8, 0x31, 0x61, 0xd9, 0xef, 0xfc, 0x29, 0xb8, 0xab, 0x3d, 0x73, 0xac, 0x6f, 0x78, 0xcd, 0xf9, 0x7d, 0xac, 0x5e, 0x04, 0xf8, 0xbd, 0x43, 0x8d, 0x48, 0xa4, 0x58, 0x34, 0xb7, 0x52, 0xd1, 0x0b, 0x9e, 0x38, 0x2f, 0x03, 0xe7, 0x42, 0x71, 0x9f, 0x25, 0x6d, 0xdb, 0x21, 0xdc, 0xe5, 0xe7, 0x0f, 0xc7, 0x20, 0xe1, 0x8e, 0xd3, 0x88, 0x44, 0x44, 0x7c, 0x7f, 0x15, 0x91, 0x43, 0xb7, 0x48, 0xc5, 0x19, 0x80, 0x44, 0x97, 0xe5, 0x0e, 0xc8, 0xc1, 0xdd, 0xf7, 0xbe, 0x0e, 0x6f, 0xc6, 0x40, 0xb6, 0x5f, 0x11, 0x7a, 0x61, 0x10, 0x2b, 0xd3, 0xfe, 0x95, 0xc4, 0xa6, 0x63, 0x7d, 0xed, 0xc4, 0x8b, 0x72, 0x95, 0xad, 0x4a, 0xe3, 0x74, 0x7d, 0x93, 0xbe, 0x4d, 0xa0, 0x66, 0x2a, 0xaf, 0xb3, 0xb1, 0xa8, 0xd0, 0x29, 0x8e, 0x57, 0x1e, 0x9a, 0x57, 0xbd, 0xc4, 0x85, 0xaa, 0x7c, 0x2f, 0xf5, 0x71, 0xa3, 0x7a, 0xc4, 0x29, 0x67, 0x8f, 0x8d, 0x7c, 0xb2, 0xf0, 0x01, 0x7c, 0x21, 0x3e, 0xc6, 0x13, 0x8f, 0x9c, 0x0f, 0x0a, 0xe0, 0x17, 0x41, 0x65, 0x6f, 0xd1, 0x00, 0x20, 0x6b, 0xd5, 0xa4, 0x63, 0xc0, 0x46, 0x59, 0xf6, 0xa8, 0x17, 0xd8, 0x3e, 0xdc, 0xeb, 0x52, 0xaa, 0x22, 0xca, 0x03, 0x0f, 0x6b, 0xb7, 0x88, 0xbd, 0x40, 0xe1, 0xa9, 0x60, 0x92, 0x6e, 0x45, 0xe8, 0xab, 0x30, 0x69, 0xac, 0xc9, 0xd5, 0x23, 0x71, 0x0c, 0x92, 0xc2, 0xc1, 0x78, 0xa5, 0xf8, 0x46, 0xbb, 0x01, 0xd9, 0xdf, 0xf5, 0x67, 0x5f, 0x80, 0xe0, 0x11, 0x0f, 0x1f, 0xbe, 0x94, 0xc1, 0x25, 0x49, 0x03, 0xa0, 0x44, 0xd5, 0x29, 0x1d, 0x51, 0xd2, 0xf5, 0x86, 0xd4, 0x89, 0x8b, 0xd8, 0xc8, 0xcd, 0xd1, 0x29, 0xf7, 0xd2, 0x4c, 0xe4, 0x50, 0x2e, 0x61, 0x3c, 0xc3, 0xda, 0x58, 0xba, 0x0e, 0x09, 0x63, 0x2a, 0x2a, 0x04, 0xdc, 0x3a, 0x5b, 0x94, 0x85, 0x6e, 0xc2, 0xdc, 0x70, 0xc8, 0x3b, 0x4d, 0xcf, 0x64, 0x6f, 0x5e, 0x1f, 0xc0, 0x7a, 0x54, 0x6a, 0xed, 0xac, 0xdb, 0xb3, 0xce, 0x4a, 0x14, 0x93, 0x9a, 0x18, 0x68, 0xdc, 0xfc, 0x16, 0x6b, 0x49, 0x3f, 0x95, 0xd8, 0xd4, 0xf6, 0xad, 0x8f, 0xf6, 0x3a, 0x49, 0x8e, 0x95, 0x42, 0x87, 0x94, 0x83, 0x3b, 0x7b, 0xf3, 0xaa, 0x72, 0x55, 0x13, 0x91, 0xdb, 0x22, 0x67, 0x46, 0x02, 0xdf, 0xc2, 0x6a, 0xcc, 0x50, 0x71, 0x74, 0x5e, 0x0e, 0xa5, 0x40, 0xe1, 0xa6, 0xfd, 0x0f, 0xeb, 0xdb, 0x4e, 0xe7, 0x9d, 0x3d, 0x3f, 0xa8, 0xdc, 0x73, 0xc0, 0xb1, 0x7c, 0xb5, 0xeb, 0x49, 0x4c, 0x0c, 0xaf, 0x0f, 0x2c, 0x0e, 0x4e, 0x41, 0xee, 0xdf, 0x0b, 0xac, 0x2a, 0xfa, 0xc5, 0xf1, 0x3d, 0x81, 0x58, 0xd1, 0xc9, 0x0b, 0x38, 0xf9, 0x68, 0xad, 0x6f, 0x16, 0x27, 0x31, 0x63, 0x0c, 0x97, 0xe5, 0x65, 0xe1, 0x16, 0xe3, 0xc8, 0x2c, 0xeb, 0xd4, 0xd4, 0x8f, 0xcf, 0x90, 0x4c, 0x88, 0x82, 0xe0, 0x50, 0x81, 0x5f, 0xd4, 0xd6, 0x01, 0x8f, 0xe4, 0xe1, 0x8f, 0xe2, 0xd6, 0x6c, 0x00, 0x21, 0x56, 0x3e, 0xcb, 0x00, 0xcc, 0x3b, 0x6a, 0x3c, 0xfd, 0x2a, 0x09, 0x9a, 0x97, 0x5b, 0x7d, 0xe2, 0x2a, 0x0d, 0x94, 0xfb, 0x84, 0x7f, 0xb8, 0x85, 0xe7, 0xcf, 0x00, 0x2f, 0x68, 0x54, 0xa2, 0x29, 0x89, 0x14, 0x28, 0x0e, 0xf0, 0x05, 0x3a, 0xdb, 0xa8, 0xb9, 0x2b, 0x4c, 0xcc, 0xc6, 0xa4, 0x81, 0x9c, 0x1a, 0x26, 0xbe, 0x46, 0xe7, 0x16, 0x91, 0x30, 0x4c, 0x6d, 0x26, 0x7c, 0x0f, 0x41, 0x66, 0xb8, 0xda, 0x04, 0x4f, 0x72, 0xef, 0xec, 0xed, 0xae, 0xcc, 0x12, 0x06, 0x2b, 0x0e, 0x01, 0xfd, 0xa5, 0x19, 0x66, 0x15, 0x12, 0x01, 0x91, 0x47, 0xe9, 0x90, 0xc9, 0x7a, 0x41, 0x17, 0xbf, 0x63, 0x0f, 0xff, 0x9d, 0xc1, 0x86, 0x88, 0x95, 0xca, 0x3a, 0x96, 0x8e, 0x3b, 0x10, 0x0d, 0x70, 0x5f, 0xf2, 0x63, 0xdc, 0xfa, 0x4f, 0xba, 0x66, 0xef, 0x28, 0x84, 0xb7, 0x54, 0xfb, 0x24, 0xee, 0xab, 0xcd, 0x78, 0x4f, 0xa5, 0xc7, 0x96, 0x76, 0x15, 0x20, 0xfa, 0x06, 0xd2, 0x9d, 0xbb, 0xbc, 0x37, 0x4e, 0xa9, 0x55, 0xc0, 0x87, 0xc2, 0xf0, 0xf0, 0x86, 0xde, 0x43, 0x04, 0xfb, 0x06, 0x48, 0x2e, 0x93, 0x94, 0x67, 0xda, 0x7a, 0xb0, 0x4a, 0x03, 0x9b, 0x7f, 0x8c, 0x59, 0xc2, 0xc1, 0x29, 0x8e, 0xbb, 0x8b, 0xe2, 0x2e, 0xbb, 0xc7, 0x61, 0xf8, 0x01, 0x31, 0x6c, 0x91, 0x7a, 0x12, 0xc5, 0x4e, 0x5c, 0xbd, 0xa7, 0x56, 0xed, 0x40, 0xfa, 0x71, 0xd3, 0x6b, 0xa6, 0x65, 0x0b, 0x12, 0xe2, 0x59, 0x55, 0x6d, 0x30, 0x8b, 0xa3, 0x24, 0xe2, 0x99, 0x6e, 0x8c, 0x98, 0x76, 0x13, 0xe7, 0xc2, 0xbf, 0xf8, 0x73, 0x49, 0x6c, 0xe2, 0x78, 0x8a, 0x15, 0x0c, 0x20, 0xb9, 0xf3, 0x28, 0x7c, 0x6b, 0x02, 0x6f, 0x9d, 0x57, 0x50, 0xe7, 0xd7, 0x95, 0x10, 0x4f, 0xcf, 0x81, 0xaa, 0xc6, 0xff, 0xa1, 0x92, 0x96, 0x18, 0x4e, 0x95, 0x8a, 0xa9, 0x90, 0xf7, 0x05, 0xa4, 0x2b, 0x19, 0xc8, 0xe7, 0x9b, 0x44, 0x0f, 0xc2, 0xd6, 0x1f, 0x1b, 0x4c, 0x04, 0xbc, 0x74, 0xad, 0x35, 0x9b, 0xe2, 0x87, 0x2c, 0x43, 0xe8, 0x87, 0x0b, 0x78, 0xaa, 0x31, 0x7d, 0x4c, 0xea, 0x07, 0x7a, 0x3e, 0xca, 0x69, 0x8d, 0x0d, 0x69, 0xa4, 0x8a, 0x4c, 0x4a, 0xdc, 0xff, 0x7f, 0x79, 0x1d, 0x97, 0x6f, 0x67, 0x91, 0xcf, 0xe0, 0xe5, 0x6e, 0x08, 0xe9, 0x5d, 0xc2, 0x76, 0x54, 0x14, 0xa9, 0x22, 0xe0, 0xcc, 0x38, 0x15, 0x54, 0x76, 0x8e, 0xc6, 0x5d, 0x6a, 0x29, 0x15, 0xb5, 0x41, 0x32, 0x19, 0x45, 0x0c, 0x1a, 0x3e, 0x17, 0xbf, 0xa8, 0x46, 0x6d, 0xa1, 0xf6, 0x2a, 0x1c, 0xb0, 0x9c, 0xe4, 0xee, 0x5b, 0x68, 0xab, 0x99, 0x17, 0x86, 0xca, 0x47, 0x48, 0x8a, 0xb0, 0x39, 0xd6, 0x7e, 0x32, 0x9b, 0xa6, 0xda, 0x96, 0x3d, 0x53, 0xe8, 0xaa, 0xf2, 0x11, 0x73, 0x77, 0x1f, 0xa3, 0x1d, 0xba, 0xcf, 0xf7, 0xc2, 0x15, 0xe8, 0xdb, 0xbc, 0x6d, 0x11, 0x93, 0x2a, 0xd1, 0x88, 0x03, 0xfd, 0x69, 0xb8, 0xbb, 0x03, 0xe8, 0x44, 0x32, 0x02, 0xe0, 0x41, 0x5b, 0x85, 0x19, 0x90, 0xf7, 0x3f, 0x3e, 0x84, 0xf6, 0x23, 0x5b, 0xe4, 0x24, 0x8a, 0xf1, 0x4e, 0x2a, 0x42, 0x8f, 0xec, 0x2b, 0xc3, 0xcf, 0x2a, 0x85, 0x9a, 0xa8, 0x8f, 0x4d, 0xba, 0x01, 0x5a, 0x70, 0x4c, 0xb1, 0x66, 0x3f, 0x7c, 0x73, 0xc1, 0xa7, 0x12, 0x88, 0x71, 0x2d, 0x65, 0xea, 0xc4, 0x63, 0xab, 0x62, 0x4a, 0x82, 0x8f, 0x41, 0xf9, 0x76, 0x4e, 0xd5, 0xcc, 0xcd, 0x21, 0x9b, 0xde, 0x11, 0x90, 0xc6, 0x9c, 0xde, 0x64, 0x2e, 0xbe, 0xa9, 0x6a, 0xd7, 0x21, 0x90, 0xde, 0x56, 0x69, 0xd1, 0x08, 0x2f, 0xce, 0xec, 0xda, 0x2d, 0x3f, 0x83, 0xce, 0x10, 0xa3, 0x1f, 0xbc, 0x62, 0x82, 0x5f, 0x2c, 0xa2, 0xac, 0xfd, 0x2b, 0x89, 0xfe, 0x64, 0x96, 0xd7, 0x75, 0x3f, 0xc8, 0xa8, 0x55, 0x94, 0xd9, 0x89, 0xd3, 0x8b, 0x12, 0x0a, 0xef, 0xa0, 0x49, 0xee, 0xbd, 0x14, 0xf6, 0xc6, 0x9c, 0xc0, 0xc8, 0xad, 0x99, 0xe2, 0x04, 0xfe, 0xe4, 0xb2, 0x79, 0x78, 0x26, 0xaa, 0xf9, 0x3a, 0xcf, 0xc1, 0xa3, 0x0a, 0x2f, 0xff, 0x75, 0x1f, 0x8a, 0xdf, 0xec, 0x5d, 0x17, 0xf8, 0x06, 0x60, 0x83, 0x37, 0x7f, 0xf0, 0x7c, 0xca, 0x7a, 0x8c, 0x3e, 0xb0, 0xac, 0xb7, 0x85, 0x0d, 0x3b, 0x19, 0x70, 0x30, 0x2f, 0xc6, 0xcf, 0xdb, 0x5f, 0x94, 0x13, 0x37, 0x13, 0xfc, 0xd8, 0xa4, 0x75, 0xac, 0x3e, 0x66, 0x3f, 0x38, 0x37, 0xd5, 0x04, 0x88, 0x4e, 0xa3, 0x98, 0x38, 0xeb, 0xf1, 0x41, 0x5b, 0xb3, 0xed, 0x27, 0xb3, 0xb8, 0xcc, 0x74, 0x1f, 0x08, 0xb3, 0x05, 0x90, 0xbd, 0xa9, 0xd5, 0x13, 0x2c, 0x2e, 0xee, 0x96, 0x19, 0x71, 0x55, 0x6a, 0x9f, 0x03, 0xc1, 0x63, 0x9f, 0x2b, 0x77, 0xc1, 0xa3, 0xd8, 0x1e, 0xf1, 0xe9, 0x92, 0x3a, 0xcb, 0x99, 0xbd, 0x33, 0x9b, 0x2d, 0xe2, 0x51, 0xd6, 0x6c, 0xd8, 0xc6, 0xc1, 0x8a, 0x3c, 0x44, 0x84, 0x88, 0x4f, 0x34, 0x0f, 0x49, 0x98, 0xf8, 0xd2, 0x00, 0x04, 0x9b, 0xc9, 0x5d, 0x49, 0x1c, 0x49, 0xaf, 0xf4, 0x7b, 0x0d, 0xe9, 0xec, 0x23, 0xf3, 0x17, 0xb3, 0x2c, 0x5d, 0x1d, 
            0xd0, 
            0x94];

            let security_level = 2;
            let (pk, sk) = super::key_pair(seed, security_level);
            assert_eq!(pk, pk_ref);
            assert_eq!(sk, sk_ref);
        }
        
        #[test]
        fn test_sign() {
            let seed = [0x9f, 0xd9, 0xaa, 0xfd, 0x8f, 0xc9, 0x01, 0xf5, 0x00, 0x85, 0xde, 0x82, 0x68, 0xc2, 0xd6, 0x30, 0x26, 0xdd, 0x8e, 0x35, 0xf8, 0x9d, 0xd1, 0xe2, 0xbc, 0x15, 0x1d, 0x7d, 0x20, 0xd0, 0x97, 0x96];
            let (pk, sk) = super::key_pair(seed, 2);
            let msg = [0xea, 0xcd, 0xc0, 0x82, 0x36, 0x1d, 0xe7, 0x10, 0x1b, 0x69, 0x6e, 0xe1, 0xa0, 0xa4, 0xf3, 0x51, 0x4a, 0x65,
            0xb6, 0xcf, 0xb3, 0x42, 0xb, 0xa4, 0x6a, 0x8d, 0x41, 0x10, 0x2f, 0xdf, 0xa2, 0x47];
            let sig = super::sign(sk, msg.to_vec());

            let sig_ref: [u8; 2420] = [
                0xd0, 0xfb, 0xa5, 0x8a, 0xf9, 0xf5, 0x2f, 0x29, 0xcf, 0xc7, 0x24, 0x11, 0xcd, 0xe9, 0x28, 0x95, 0x50, 0xb2,0xff, 0xa3, 0x7, 0x60, 0x1d, 0xc9, 0xb3, 0xdd, 0x59, 0xd7, 0xf7, 0x76, 0x62, 0xf4, 0xb6, 0x94, 0xb2, 0x32, 0x2c,
                0x15, 0x95, 0xdd, 0xfb, 0x61, 0x3b, 0x48, 0xf5, 0xd4, 0x18, 0xb0, 0x7e, 0x62, 0xc0, 0x91, 0xca, 0x95, 0x7e, 0x1e,
                0xf4, 0x9b, 0x63, 0x8, 0x44, 0xc3, 0xc9, 0x7a, 0x12, 0x8, 0x4e, 0x83, 0xf9, 0x92, 0xbb, 0xff, 0x6, 0xff, 0xea, 0x5f,
                0x8e, 0xd4, 0xa1, 0xc4, 0x65, 0xf, 0xfa, 0x7a, 0xc2, 0x33, 0x15, 0xf9, 0x2f, 0xa0, 0x3a, 0x98, 0x3f, 0x58, 0x27,
                0x55, 0xe4, 0xb0, 0x0, 0xb6, 0xc3, 0x8, 0x18, 0x9a, 0x13, 0xd0, 0xdd, 0xa8, 0x9f, 0xdf, 0xff, 0x1a, 0x31, 0xae,
                0xca, 0x19, 0x28, 0x49, 0x52, 0x9e, 0x89, 0xee, 0x6, 0x30, 0xa6, 0x41, 0x9a, 0xb6, 0xb, 0xd8, 0x20, 0xa4, 0x7, 0xe2,
                0x35, 0xc9, 0xaf, 0x1b, 0xb, 0x93, 0xde, 0x39, 0xf0, 0xba, 0x32, 0xe2, 0x8c, 0x27, 0x89, 0xe7, 0xdc, 0x22, 0x3e,
                0x96, 0x75, 0xfc, 0x8, 0x12, 0xe6, 0x32, 0xbf, 0x8, 0x5b, 0x4b, 0x4e, 0x1d, 0x21, 0x6e, 0xaf, 0x76, 0xa, 0xdf, 0x6d,
                0xa5, 0x85, 0xf9, 0xf7, 0x90, 0x5e, 0x1e, 0xa3, 0x84, 0x55, 0x83, 0x1b, 0xa2, 0x74, 0xf4, 0x84, 0x40, 0xad, 0x1e,
                0xb7, 0x93, 0x61, 0x24, 0xf3, 0xb, 0xcb, 0x6c, 0xbc, 0x72, 0x78, 0x6a, 0xd2, 0x53, 0x23, 0x6f, 0x32, 0xc1, 0x1f,
                0xb0, 0xfd, 0x8a, 0xd1, 0xef, 0xf9, 0x4, 0x7f, 0x17, 0x41, 0x83, 0xa, 0xbd, 0x72, 0x4f, 0xca, 0xd1, 0xa5, 0x2f,
                0x91, 0x1e, 0x5d, 0xde, 0x41, 0x3a, 0xaa, 0xba, 0x14, 0x37, 0xa0, 0xc9, 0xc4, 0x15, 0x56, 0xcf, 0x64, 0xfe, 0xcc,
                0xb, 0xba, 0xef, 0x52, 0xb1, 0xc6, 0xe, 0xcb, 0xcf, 0xd9, 0x37, 0xa8, 0x85, 0x62, 0x84, 0xac, 0xa, 0xf9, 0xbb, 0xf9,
                0xe4, 0xf, 0xfc, 0x1, 0x5a, 0x56, 0xe1, 0x3b, 0x8e, 0xe4, 0xed, 0x3a, 0xda, 0xe2, 0xbb, 0x2c, 0xcc, 0xa, 0xda, 0xe0,
                0xbd, 0xb5, 0x1f, 0x23, 0x55, 0xc2, 0xfc, 0x20, 0x1, 0x9b, 0xb9, 0xe4, 0xed, 0xcb, 0x94, 0x72, 0x92, 0xfe, 0xc,
                0xe1, 0xe2, 0x8a, 0xcf, 0x6d, 0xac, 0x93, 0x5, 0x54, 0x6c, 0x35, 0x99, 0x41, 0x4, 0x64, 0x42, 0xd8, 0x7b, 0xb6,
                0xa2, 0x65, 0xfb, 0x77, 0xe1, 0xc2, 0xee, 0x36, 0xfa, 0x6a, 0xb7, 0xf5, 0xe9, 0x47, 0x81, 0x5d, 0x1f, 0x99, 0x62,
                0xd8, 0x80, 0xf7, 0xe9, 0x1e, 0x3f, 0xaf, 0xd4, 0x5, 0xa5, 0xf3, 0x63, 0xd8, 0xcb, 0xa9, 0x26, 0xdd, 0xb1, 0x9e,
                0xbe, 0x9b, 0xfa, 0x4f, 0x3b, 0x8d, 0x94, 0x67, 0x86, 0x7e, 0x51, 0x4a, 0x76, 0x6a, 0x43, 0x20, 0x53, 0x6f, 0x68,
                0xe1, 0x4b, 0x64, 0x46, 0xde, 0x41, 0xd5, 0x79, 0x70, 0x95, 0xea, 0x11, 0xab, 0xef, 0x42, 0xe3, 0xdf, 0x28, 0x7d,
                0x31, 0xd7, 0x85, 0x5, 0x6f, 0xfd, 0xe2, 0x35, 0x3b, 0x53, 0x3a, 0x6a, 0x55, 0xee, 0xd1, 0x4f, 0xc4, 0xe9, 0xc3,
                0x27, 0x23, 0xcb, 0x27, 0xcd, 0xa1, 0x60, 0x91, 0xd9, 0xed, 0x1b, 0x22, 0x38, 0xcb, 0x6c, 0xc2, 0xc7, 0x5a, 0x48,
                0x9a, 0x13, 0x5e, 0xa1, 0xfc, 0x42, 0xb4, 0xd5, 0x43, 0xeb, 0x33, 0xfc, 0x56, 0x5e, 0x2c, 0x34, 0xb5, 0xe5, 0xa9,
                0x43, 0xba, 0x8b, 0xc0, 0xd4, 0x88, 0x76, 0x15, 0x77, 0x8d, 0x9b, 0xc6, 0xc2, 0x10, 0x9b, 0xd3, 0x37, 0xd9, 0x8,
                0x84, 0xa6, 0xc9, 0xd7, 0xf4, 0xc4, 0x74, 0x6d, 0xea, 0xce, 0x37, 0xb, 0xca, 0x6e, 0x33, 0x9, 0xa0, 0xdf, 0x88,
                0xca, 0x5b, 0xcc, 0x3c, 0xf5, 0x87, 0x31, 0x3a, 0xb6, 0xd6, 0xdd, 0x56, 0x67, 0xb2, 0xbd, 0xda, 0xc2, 0x88, 0xa,
                0x92, 0xad, 0x86, 0x90, 0xb6, 0x33, 0xc, 0xd2, 0xc3, 0x52, 0x32, 0x57, 0x22, 0xd4, 0x70, 0x4d, 0x62, 0x7f, 0xa8,
                0xd, 0x30, 0xf6, 0x49, 0x18, 0x81, 0xeb, 0xb2, 0x5, 0x23, 0x87, 0x1d, 0xd3, 0x37, 0xef, 0xc0, 0xd3, 0x1e, 0x6e, 0xef, 0x11, 0xf3, 0x12, 0xaa, 0x89, 0x86, 0xa8, 0x58, 0x45, 0xa4, 0x43, 0xeb, 0x41, 0x52, 0x29, 0xf6, 0xae, 0xc1,
                0x70, 0xe7, 0x36, 0x41, 0x87, 0x4c, 0x96, 0xa2, 0xdb, 0x19, 0x1e, 0x80, 0xde, 0x14, 0x4a, 0xe5, 0x64, 0x9c, 0xbe,
                0x4d, 0x4, 0xa2, 0x30, 0x17, 0xee, 0x64, 0xc8, 0xc8, 0x11, 0xba, 0xf7, 0x99, 0xba, 0x44, 0xaa, 0xab, 0xe, 0x80,
                0x14, 0xe5, 0xa9, 0xbc, 0x3d, 0x27, 0x10, 0x11, 0xe0, 0x4f, 0xfa, 0x16, 0xda, 0xea, 0x70, 0x35, 0x19, 0x2e, 0x53,
                0x7d, 0x95, 0x3d, 0x1, 0x2b, 0xe8, 0x76, 0xaa, 0x39, 0x96, 0x21, 0xc, 0xbd, 0x5e, 0x1a, 0x64, 0xe1, 0x60, 0xcd,
                0xb9, 0x86, 0x9c, 0x62, 0xb5, 0x11, 0xe3, 0x58, 0xb4, 0xb8, 0x33, 0xdf, 0xf4, 0x79, 0x6b, 0x6d, 0xbe, 0x80, 0xb1,
                0x85, 0xce, 0x83, 0x9c, 0xec, 0xea, 0x2a, 0x63, 0x95, 0x38, 0xad, 0x2, 0x12, 0x61, 0x2, 0xba, 0x33, 0x5a, 0x2a,
                0xbe, 0xae, 0x0, 0xe4, 0xf4, 0x90, 0x79, 0x33, 0x54, 0x35, 0xfe, 0x69, 0xad, 0x79, 0x32, 0xb1, 0x35, 0x9f, 0x1f,
                0x85, 0x85, 0xbe, 0x86, 0x3a, 0x27, 0xfc, 0xb0, 0xc5, 0x1d, 0x97, 0xa4, 0x76, 0x8e, 0x7b, 0x15, 0x4f, 0x87, 0xbd,
                0x8c, 0x3d, 0xfa, 0xc3, 0x3f, 0x6f, 0x8b, 0x75, 0x5, 0xe, 0x9f, 0x9a, 0xa0, 0x34, 0x11, 0x47, 0x1, 0xe7, 0x88, 0xac,
                0x0, 0x59, 0x5, 0x12, 0x4e, 0x7f, 0x4d, 0x29, 0x25, 0xab, 0x76, 0xfa, 0xae, 0x94, 0x45, 0xeb, 0x8b, 0xa8, 0xc1,
                0x91, 0xe4, 0x4d, 0x8c, 0xd8, 0xfb, 0x52, 0x68, 0x59, 0x41, 0x12, 0xdb, 0x53, 0xd3, 0xf0, 0xce, 0xd6, 0x6, 0x63,
                0x56, 0x93, 0x7f, 0xdf, 0x1c, 0x60, 0xf, 0xc0, 0x14, 0x6, 0xc0, 0x7d, 0xe1, 0xd3, 0x65, 0x5a, 0x1e, 0xa5, 0xda,
                0x7f, 0xf4, 0xd0, 0xe5, 0xab, 0x65, 0xdb, 0x6, 0xe6, 0xc2, 0x17, 0x61, 0xf1, 0x93, 0x88, 0xed, 0xc7, 0x20, 0x7d,
                0x34, 0x38, 0xef, 0x12, 0x29, 0x21, 0x13, 0x6d, 0xc9, 0x75, 0xad, 0x50, 0x4c, 0x6f, 0x37, 0xde, 0x3f, 0x3c, 0xd5,
                0x9e, 0xdc, 0x52, 0x4b, 0xb6, 0x17, 0x8f, 0x1b, 0x1f, 0x68, 0x9d, 0x4d, 0x4d, 0x39, 0x7e, 0xdb, 0xeb, 0xf5, 0xe4,
                0x15, 0xd7, 0x2a, 0x8e, 0xf6, 0xee, 0x3a, 0x2, 0x1c, 0xc2, 0xc3, 0xa6, 0xfd, 0xfc, 0xd7, 0x33, 0x9c, 0x6d, 0x94,
                0x1f, 0x8a, 0xbf, 0xfd, 0x65, 0x81, 0x24, 0x58, 0x29, 0x6f, 0x19, 0xd7, 0x79, 0xf5, 0xb1, 0x12, 0x34, 0xaa, 0xf,
                0x6b, 0xd, 0xce, 0x97, 0x30, 0x32, 0xf1, 0x58, 0xc7, 0x89, 0x83, 0x69, 0x2a, 0xc1, 0x79, 0x7d, 0x81, 0x90, 0x1a,
                0x94, 0x8e, 0x39, 0xe7, 0xe, 0x49, 0x84, 0x43, 0x20, 0x60, 0x37, 0x8d, 0x92, 0x53, 0x68, 0x9, 0xa3, 0xfd, 0x43,
                0xe0, 0xa2, 0x55, 0xab, 0x32, 0x6f, 0x36, 0xd9, 0xf8, 0x3e, 0xfd, 0x6a, 0x9c, 0x5c, 0xb2, 0x90, 0xa4, 0x8e, 0x58,
                0x79, 0x1d, 0xb6, 0x3f, 0xeb, 0x11, 0x42, 0xd1, 0xf5, 0x83, 0x60, 0xbf, 0x74, 0xcf, 0x43, 0x0, 0xf, 0xa5, 0xae,
                0x14, 0xd0, 0x1d, 0x34, 0x1, 0x7d, 0xc5, 0xdc, 0x82, 0xa2, 0x32, 0xe8, 0x3, 0x82, 0x3f, 0x75, 0xea, 0x3d, 0x2d,
                0x4b, 0x89, 0x55, 0x0, 0xbc, 0x8d, 0x40, 0xbd, 0x24, 0x4b, 0xd0, 0xa3, 0xd, 0x34, 0x16, 0x3d, 0x27, 0xaf, 0xb5,
                0x38, 0x54, 0x50, 0x87, 0xf, 0x66, 0xf6, 0x2d, 0xa2, 0xc7, 0x9, 0x4f, 0x62, 0x18, 0x51, 0xa2, 0x6e, 0x23, 0xb2,
                0xc2, 0x3, 0xfa, 0xf3, 0x9, 0x9c, 0x91, 0xe5, 0x18, 0x5, 0xbe, 0x7a, 0x1, 0x4f, 0x81, 0xfa, 0xd7, 0x45, 0xd2, 0x32,
                0x28, 0x49, 0xae, 0xd9, 0xfa, 0xa1, 0xa9, 0x14, 0xff, 0x77, 0x72, 0xb, 0xb5, 0xb6, 0x18, 0x8d, 0x19, 0x4e, 0x19,
                0xe2, 0x6, 0x8, 0xa5, 0x87, 0x42, 0xe1, 0xea, 0xeb, 0x6d, 0x33, 0xe1, 0x29, 0x7d, 0x8c, 0x6d, 0x12, 0x26, 0xf7,
                0x88, 0x69, 0xb8, 0x33, 0xbc, 0xb8, 0x32, 0xe, 0x7f, 0x22, 0x6, 0xbd, 0xf1, 0xd8, 0xba, 0x93, 0xb6, 0xe9, 0x5d, 0x40, 0x2d, 0x13, 0x51, 0x97, 0x91, 0xb5, 0x5, 0x4c, 0xe6, 0x1c, 0x5, 0x4, 0x77, 0x52, 0xb9, 0x23, 0x4e, 0x19, 0xb2,
                0x40, 0xa4, 0xfa, 0x51, 0x4b, 0x78, 0xe4, 0xfd, 0x8a, 0x93, 0x5d, 0xb0, 0x4c, 0x65, 0x74, 0xfc, 0x19, 0x64, 0x29,
                0x1b, 0x31, 0x37, 0x42, 0x64, 0xa5, 0x1b, 0x56, 0xd8, 0xfe, 0x3b, 0xbe, 0xfb, 0x8d, 0x16, 0xf3, 0x9a, 0x3f, 0xf1,
                0xc, 0x8f, 0x83, 0xf7, 0x2c, 0x61, 0x6d, 0x6e, 0x7c, 0x78, 0x68, 0x2, 0xad, 0x41, 0x12, 0xa3, 0xf7, 0x15, 0x8e,
                0x7e, 0x4b, 0x3c, 0xf7, 0x3b, 0x46, 0x69, 0xc1, 0xd8, 0x6, 0x7b, 0x44, 0x11, 0x50, 0x92, 0x37, 0xcf, 0xf, 0x13,
                0x3f, 0xde, 0xc2, 0xee, 0x28, 0x40, 0x38, 0xec, 0x28, 0x74, 0x23, 0xd2, 0x30, 0xec, 0xc4, 0x3e, 0xd0, 0xbd, 0x8b,
                0x66, 0xf2, 0xd2, 0xbf, 0x13, 0x73, 0xd1, 0x5a, 0x78, 0xf0, 0x99, 0xda, 0x32, 0xb, 0xe4, 0x9f, 0x5d, 0x67, 0x82,
                0x23, 0xda, 0x20, 0xb4, 0x3e, 0x11, 0x83, 0x18, 0xee, 0x71, 0x9b, 0x2a, 0x40, 0xbe, 0xc5, 0x54, 0xf4, 0x3e, 0xa5,
                0xbf, 0x70, 0x4e, 0x76, 0xfd, 0x4b, 0x3c, 0xb6, 0x37, 0x53, 0xba, 0x62, 0xa9, 0x45, 0x85, 0x71, 0x25, 0x59, 0x27,
                0x11, 0x8e, 0x7f, 0xa, 0x42, 0x8c, 0x73, 0x12, 0xad, 0xdf, 0xc6, 0x57, 0xfb, 0x8b, 0xa8, 0x2, 0xc5, 0x17, 0x57, 0x3,
                0x50, 0x3c, 0xdb, 0x42, 0x43, 0x13, 0x57, 0x1d, 0x8, 0xd8, 0xb8, 0xe, 0xa, 0xb0, 0x8f, 0x86, 0x2f, 0x84, 0x2d, 0xe7,
                0x64, 0x9d, 0x24, 0xf0, 0xb2, 0x7f, 0x3d, 0x97, 0xef, 0xd, 0x97, 0xb9, 0x90, 0x27, 0x85, 0xcd, 0x65, 0xfc, 0xab,
                0x54, 0xdf, 0xd6, 0x8a, 0xe2, 0x7f, 0x14, 0xaf, 0x14, 0x44, 0x7a, 0x82, 0x6b, 0xa7, 0x8f, 0xfb, 0xaf, 0xb0, 0xa6,
                0x9e, 0x53, 0x3, 0xa7, 0x8b, 0x37, 0xe, 0xf0, 0x15, 0x4d, 0x64, 0x20, 0x5c, 0x61, 0x41, 0x23, 0x95, 0x66, 0x99,
                0x90, 0x41, 0xad, 0xec, 0x72, 0x46, 0x5, 0x96, 0x3f, 0x31, 0x8f, 0x12, 0x1b, 0x7, 0xe4, 0x3a, 0x93, 0xda, 0x71,
                0x2b, 0xd5, 0x14, 0x4e, 0x53, 0x19, 0x8f, 0xb1, 0x26, 0x25, 0x4c, 0x7e, 0xf2, 0x83, 0xf7, 0xe2, 0x39, 0x7, 0xba,
                0xc, 0xf1, 0x34, 0xde, 0xe2, 0xf7, 0xb7, 0xd3, 0x94, 0xfc, 0x79, 0x2e, 0x70, 0xcd, 0x59, 0x80, 0xa, 0xb0, 0xc2,
                0xd7, 0x3c, 0x12, 0xf4, 0x1c, 0x33, 0xbe, 0xda, 0x75, 0x97, 0x9a, 0x15, 0xac, 0xe, 0x35, 0x59, 0xe2, 0xe1, 0x74,
                0x7a, 0xe6, 0x17, 0xdb, 0xa6, 0xc1, 0x5e, 0xe1, 0xa9, 0x43, 0xb7, 0xbc, 0x75, 0x9, 0x6a, 0x4, 0xa3, 0x93, 0x30,
                0x67, 0x78, 0xba, 0xc4, 0xad, 0x1e, 0x22, 0x52, 0xc, 0x44, 0x2c, 0x23, 0x4, 0xfe, 0x9a, 0xc5, 0x9b, 0xf, 0xef, 0x84,
                0x98, 0x2c, 0xf8, 0xd4, 0xbc, 0xa9, 0x60, 0x7a, 0x93, 0xde, 0x6b, 0x8, 0x28, 0x18, 0xe9, 0x51, 0x3f, 0xec, 0xd3,
                0x24, 0xb8, 0xf9, 0xed, 0xa7, 0x7f, 0xaa, 0x1, 0x2c, 0xad, 0x62, 0xe4, 0x56, 0xd6, 0x85, 0xaa, 0x22, 0x50, 0x1,
                0x4f, 0x6e, 0xab, 0xe4, 0xb5, 0x2f, 0x4, 0xbc, 0xd5, 0x55, 0x18, 0x2f, 0x89, 0xd4, 0x86, 0x9e, 0x3c, 0x2e, 0xc9,
                0xef, 0xa, 0x83, 0x27, 0xe0, 0x63, 0x2f, 0xb9, 0xe1, 0xe3, 0x1f, 0x76, 0xd8, 0xd, 0xe, 0x6a, 0xa8, 0xf2, 0x7f, 0x71,
                0x4f, 0xf3, 0x3f, 0x47, 0x20, 0x71, 0xe4, 0xfb, 0x90, 0x98, 0xef, 0x7, 0xe1, 0xfa, 0x8d, 0xe6, 0x8b, 0x9f, 0xf5,
                0xb9, 0x4b, 0xc1, 0x54, 0x32, 0x18, 0xcb, 0x17, 0xc2, 0xdb, 0x42, 0x3, 0x79, 0x18, 0xdf, 0xed, 0x59, 0x25, 0x66,
                0xa5, 0x14, 0x38, 0xeb, 0xbb, 0xd2, 0x76, 0x2d, 0x45, 0x84, 0x73, 0x5b, 0x18, 0x87, 0xc1, 0x58, 0x5e, 0xf9, 0xf7,
                0x14, 0xdc, 0x78, 0x18, 0xa5, 0x54, 0xdd, 0x40, 0x55, 0x6f, 0x32, 0x87, 0x31, 0xc, 0xaa, 0x3, 0x4a, 0x57, 0xa1,
                0xa1, 0xc, 0xcc, 0xd6, 0xea, 0x51, 0xb1, 0x43, 0xce, 0x99, 0x13, 0x3e, 0x59, 0x3b, 0xca, 0xa8, 0xdf, 0x24, 0x7a, 0x99, 0x41, 0xab, 0x6f, 0xf, 0x9e, 0x8a, 0x38, 0x55, 0x7e, 0x24, 0xf0, 0x65, 0xc5, 0x7a, 0xf7, 0xe5, 0xda, 0x9e,
                0x3e, 0xd0, 0xf0, 0xdf, 0x3f, 0x68, 0xca, 0xfa, 0xaf, 0x65, 0xa7, 0x5a, 0x41, 0x3c, 0x52, 0xf2, 0xc4, 0x0, 0x8a,
                0x0, 0x65, 0x7e, 0x13, 0x8c, 0x6, 0x9, 0x13, 0xf8, 0xec, 0x68, 0xe9, 0x10, 0x14, 0x7, 0x32, 0x12, 0xaf, 0x3d, 0x13,
                0xca, 0x98, 0x2b, 0x76, 0xe4, 0xb2, 0xbb, 0x1e, 0x6e, 0xc, 0x7a, 0xa9, 0x6a, 0x78, 0x54, 0xb3, 0x6e, 0x52, 0x1d,
                0x8a, 0x4, 0x9f, 0xb5, 0x2d, 0x50, 0xce, 0x1f, 0x1d, 0x92, 0x59, 0xd1, 0x7b, 0x3a, 0x17, 0xfa, 0xc, 0xfc, 0x9b, 0x5,
                0x63, 0x9, 0xc5, 0x38, 0xb7, 0xd8, 0xc7, 0xe0, 0xc4, 0x7e, 0xfa, 0xb8, 0x78, 0xc, 0xe3, 0x8, 0xa7, 0xd1, 0xa, 0x47,
                0x46, 0xfb, 0x47, 0xb, 0xef, 0xa8, 0x32, 0x3c, 0x3f, 0x41, 0x21, 0xc5, 0x9e, 0x1a, 0x57, 0x2c, 0xb4, 0xb, 0x88,
                0x26, 0x56, 0xe9, 0xee, 0x3d, 0x33, 0x5d, 0xbc, 0xad, 0x6, 0x1, 0xdf, 0xd5, 0xbc, 0xcb, 0x67, 0xbc, 0x58, 0x57,
                0xe2, 0x84, 0x2f, 0x5a, 0xe7, 0x67, 0x75, 0xeb, 0x34, 0x44, 0x5, 0x9e, 0xbf, 0x9c, 0x9f, 0x5, 0x7, 0xa3, 0x2e, 0xa7,
                0x48, 0xb4, 0xd5, 0x5c, 0xbc, 0x9f, 0x3d, 0x46, 0x23, 0x85, 0x25, 0xc7, 0x52, 0xd6, 0x33, 0xec, 0x66, 0xe0, 0x4e,
                0xb8, 0x84, 0x22, 0x2, 0xb9, 0x71, 0x23, 0xbf, 0x52, 0xb5, 0xf2, 0x66, 0x75, 0xb9, 0x3, 0x78, 0x23, 0x96, 0x59,
                0xef, 0xf1, 0xdc, 0x85, 0xd7, 0x65, 0x26, 0x2e, 0x8e, 0xdf, 0x38, 0x27, 0x2e, 0xaf, 0x59, 0xd6, 0x79, 0xb1, 0xf3,
                0xeb, 0xfe, 0x3b, 0xe3, 0xd9, 0x79, 0xc, 0x4f, 0x12, 0xed, 0x7c, 0x20, 0x44, 0xf1, 0xc1, 0x9, 0x60, 0x5, 0xba, 0x69,
                0xcc, 0xda, 0x65, 0x6e, 0xf9, 0x54, 0x73, 0x17, 0xd4, 0xa9, 0x4a, 0xbf, 0x47, 0xce, 0x6b, 0xcd, 0xf7, 0x6b, 0xc6,
                0xb0, 0x9d, 0xe4, 0xd9, 0x11, 0xeb, 0xf2, 0xda, 0xed, 0x58, 0xa1, 0x90, 0x62, 0x10, 0x3, 0x79, 0x46, 0x61, 0x2b,
                0x88, 0x8e, 0xf6, 0xed, 0xee, 0x52, 0xe, 0xd2, 0xa7, 0x1a, 0x88, 0xf5, 0x18, 0x52, 0x7c, 0xca, 0xf3, 0xe1, 0x3d,
                0xb2, 0x81, 0xf, 0xc2, 0x7e, 0xa7, 0x2f, 0x55, 0x7b, 0xe6, 0xa8, 0xca, 0x55, 0xdd, 0x17, 0x20, 0x5, 0xac, 0x8b, 0x9,
                0xa9, 0x82, 0xa5, 0x9b, 0xe8, 0x8b, 0x3b, 0xd8, 0x7d, 0xf6, 0xe2, 0x3, 0xe0, 0xd2, 0x6b, 0x21, 0xec, 0xdb, 0x75,
                0x28, 0x4c, 0x3a, 0x43, 0xa5, 0x9b, 0x22, 0x10, 0x13, 0x35, 0x23, 0xe7, 0x5c, 0x41, 0xa3, 0x33, 0xd8, 0xbb, 0x5,
                0x94, 0xe, 0xc0, 0x43, 0x90, 0x68, 0x3a, 0xa3, 0xe0, 0x3, 0xda, 0x86, 0xc2, 0x1, 0xe5, 0x18, 0x1c, 0xc, 0x3b, 0xdc,
                0xf1, 0xa1, 0x9c, 0x59, 0x7b, 0x7d, 0x22, 0x46, 0x97, 0x7a, 0x3f, 0xe3, 0xb5, 0xb7, 0x7e, 0xc6, 0x11, 0xcb, 0x33,
                0xee, 0x72, 0x33, 0x9f, 0x42, 0xd5, 0xdc, 0xb9, 0xd3, 0x71, 0x7e, 0x2a, 0xb1, 0xd7, 0x52, 0x28, 0x9c, 0xf8, 0xfb,
                0x93, 0x6b, 0xc0, 0xfb, 0x1c, 0x45, 0xb0, 0x7f, 0xfc, 0x8b, 0x47, 0x6, 0x82, 0x78, 0x74, 0x2d, 0x65, 0x5d, 0x62,
                0x9f, 0xf4, 0xdc, 0xc, 0x84, 0xba, 0xad, 0x96, 0x81, 0x60, 0xed, 0x7a, 0x27, 0xe7, 0x41, 0xd5, 0x2a, 0xab, 0xcd,
                0x13, 0xf0, 0xfa, 0x2c, 0x3c, 0x0, 0x51, 0x2a, 0xa, 0x74, 0xcb, 0xc8, 0x90, 0xe3, 0xc9, 0x5d, 0x2b, 0x88, 0xed,
                0x61, 0xae, 0x6d, 0x79, 0x94, 0xb0, 0x5f, 0x9d, 0x36, 0xcb, 0xc1, 0xb2, 0x33, 0x27, 0x2a, 0x47, 0xb9, 0x76, 0x9a,
                0x5d, 0x2d, 0xbc, 0xb7, 0x88, 0xeb, 0x15, 0xd3, 0x70, 0xa6, 0x8d, 0x63, 0x30, 0x77, 0xca, 0x52, 0x3c, 0x32, 0x8b,
                0xce, 0x2, 0x5c, 0xd8, 0x4f, 0x9, 0xb6, 0xac, 0x3e, 0xaf, 0x3a, 0x11, 0x44, 0x9d, 0x82, 0x7b, 0x52, 0x56, 0xca,
                0xce, 0xde, 0xe3, 0xa7, 0xc1, 0xa6, 0x4d, 0x31, 0x5d, 0xb0, 0x95, 0xac, 0x44, 0x16, 0xe3, 0xdf, 0x14, 0x84, 0x54, 0x23, 0xd3, 0xce, 0x47, 0x0, 0xd7, 0x14, 0x57, 0x59, 0xf1, 0x2e, 0x2a, 0x84, 0x13, 0x91, 0xaf, 0xc9, 0x88, 0x42,
                0xf9, 0xf8, 0x4f, 0x1e, 0xaa, 0x69, 0x69, 0x1b, 0xe6, 0x7e, 0xb0, 0xdd, 0x4c, 0xea, 0x1e, 0x6b, 0x74, 0xc9, 0x60,
                0x9e, 0x85, 0x42, 0x1a, 0x2e, 0x22, 0xc2, 0xb3, 0x2a, 0x4d, 0x4e, 0x7, 0xad, 0x54, 0xce, 0x8d, 0x8a, 0x6d, 0x42,
                0x1f, 0x11, 0xe0, 0xae, 0xda, 0x6a, 0x1f, 0x9e, 0x11, 0x77, 0xd5, 0xf3, 0xec, 0xbc, 0xd2, 0xb9, 0xa0, 0x7c, 0xaa,
                0x1a, 0xa0, 0x45, 0x4f, 0x5a, 0xbc, 0xd3, 0xea, 0x93, 0x30, 0x4c, 0x79, 0x42, 0xbb, 0x4b, 0x12, 0x7c, 0xfe, 0x1e,
                0x1e, 0x8a, 0xa6, 0xe5, 0x3d, 0xa1, 0x51, 0xe4, 0x11, 0xf1, 0x3b, 0xb3, 0xe2, 0x43, 0x97, 0x6c, 0xa0, 0xc9, 0xdd,
                0x3, 0x11, 0x15, 0x1c, 0x26, 0x28, 0x3a, 0x54, 0x5a, 0x5d, 0x66, 0x85, 0x9b, 0xb8, 0xfc, 0xe, 0x22, 0x3e, 0x55,
                0x5e, 0x68, 0x6d, 0x7e, 0x84, 0x87, 0xd0, 0xd2, 0x12, 0x18, 0x1d, 0x27, 0x2b, 0x3b, 0x6b, 0x87, 0x8c, 0x98, 0xa1,
                0xc2, 0xc4, 0xd1, 0xd9, 0xe1, 0xf2, 0xf9, 0x1a, 0x1d, 0x32, 0x35, 0x42, 0x5f, 0x65, 0x67, 0x78, 0x89, 0x8e, 0x90,
                0xa2, 0xce, 0xd5, 0xd6, 0xea, 0xf4, 0xf7, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xf, 0x1b, 0x2d, 0x40];

                assert_eq!(sig, sig_ref);
        }
    }
}
